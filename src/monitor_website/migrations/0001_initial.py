# Generated by Django 4.0.5 on 2022-07-18 10:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cf_contest', models.CharField(max_length=20, unique=True, verbose_name='Номер контеста')),
                ('human_name', models.TextField(blank=True)),
                ('last_status_update', models.DateTimeField(null=True)),
                ('last_comment', models.TextField(blank=True)),
                ('is_fresh', models.BooleanField(default=True)),
                ('has_errors', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(blank=True, max_length=20, verbose_name='Код группы')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('human_name', models.CharField(blank=True, max_length=50)),
                ('is_old', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=True)),
                ('allow_ghosts', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Personality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=50, unique=True)),
                ('real_name', models.CharField(blank=True, max_length=50)),
                ('is_blacklisted', models.BooleanField(default=False)),
                ('is_ghost', models.BooleanField(default=True)),
                ('monitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor_website.monitor')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(blank=True, max_length=10, verbose_name='Номер в контесте')),
                ('name', models.TextField(blank=True, verbose_name='Название задачи')),
                ('desc', models.TextField(blank=True, verbose_name='Короткое описание')),
                ('is_analysed', models.BooleanField(default=False, verbose_name='Разобрано?')),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor_website.contest', verbose_name='Контест')),
            ],
        ),
        migrations.CreateModel(
            name='Submit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(max_length=20, unique=True, verbose_name='Индекс')),
                ('submission_time', models.DateTimeField(verbose_name='Дата отправления')),
                ('is_contest', models.BooleanField(verbose_name='Сдано на контесте?')),
                ('verdict', models.CharField(choices=[('OK', 'OK'), ('NOT_OK', 'Не зачтено'), ('TESTING', 'Тестируется')], max_length=10)),
                ('personality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor_website.personality')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor_website.problem')),
            ],
        ),
        migrations.AddField(
            model_name='contest',
            name='monitor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitor_website.monitor'),
        ),
    ]
